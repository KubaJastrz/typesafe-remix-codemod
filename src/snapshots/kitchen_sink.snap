---
source: src/codemod.rs
description: "import { ActionFunctionArgs, LoaderFunctionArgs } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\n\nexport const meta = () => [{ title }];\n\nconst title = \"User page\";\n\nexport function action({ params, response }: ActionFunctionArgs) {\n  response.status = 307;\n  response.headers.set(\"Location\", \"/login\");\n  return response;\n}\n\nexport const loader = async ({ params }: LoaderFunctionArgs) => {\n  const { userId } = params;\n  return { userId };\n};\n\nexport default function Splat() {\n  const data = useLoaderData<typeof loader>();\n  return <h1>User: {data.userId}</h1>;\n}\n"
expression: "codemod(input, source_type).unwrap()"
---
import { ActionFunctionArgs, LoaderFunctionArgs } from "@remix-run/node";
import { useLoaderData } from "@remix-run/react";



const title = "User page";







export default defineRoute({
  meta: () => [{ title }],
  action({ params, response }: ActionFunctionArgs) {
    response.status = 307;
    response.headers.set("Location", "/login");
    return response;
  },
  async loader({ params }: LoaderFunctionArgs) {
    const { userId } = params;
    return { userId };
  },
  Component() {
    const data = useLoaderData();
    return <h1>User: {data.userId}</h1>;
  },
});
